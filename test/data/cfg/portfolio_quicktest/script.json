{
    "nodes": {
        "read_accounts": {
            "type": "file_table",
            "desc": "Load accounts from csv",
            "explicit_run_only": true,
            "r": {
                "urls": ["{dir_in}/accounts.csv"],
                "hdr_line_idx": 0,
                "first_data_line_idx": 1,
                "columns": {
                    "col_account_id": {
                        "col_hdr": "account_id",
                        "col_type": "string"
                    },
                    "col_earliest_period_start": {
                        "col_hdr": "earliest_period_start",
                        "col_type": "string"
                    }
                }
            },
            "w": {
                "name": "accounts",
                "having": "w.earliest_period_start <= \"{period_start_eod}\"",
                "fields": {
                    "account_id": {
                        "expression": "r.col_account_id",
                        "type": "string"
                    },
                    "earliest_period_start": {
                        "expression": "r.col_earliest_period_start",
                        "type": "string"
                    }
                }
            }
        },
        "read_txns": {
            "type": "file_table",
            "desc": "Load txns from csv",
            "explicit_run_only": true,
            "r": {
                "urls": ["{dir_in}/txns.csv"],
                "hdr_line_idx": 0,
                "first_data_line_idx": 1,
                "columns": {
                    "col_ts": {
                        "col_hdr": "ts",
                        "col_format": "2006-01-02 15:04:05",
                        "col_type": "datetime"
                    },
                    "col_account_id": {
                        "col_hdr": "account_id",
                        "col_type": "string"
                    },
                    "col_ticker": {
                        "col_hdr": "ticker",
                        "col_type": "string"
                    },
                    "col_qty": {
                        "col_hdr": "qty",
                        "col_format": "%d",
                        "col_type": "int"
                    },
                    "col_price": {
                        "col_hdr": "price",
                        "col_format": "%f",
                        "col_type": "float"
                    }
                }
            },
            "w": {
                "name": "txns",
                "having": "w.ts > time.Parse(\"2006-01-02\",\"{period_start_eod}\") && w.ts <= time.Parse(\"2006-01-02 15:04:05.000\",\"{period_end_eod}\"+\" 23:59:59.999\")",
                "fields": {
                    "account_id": {
                        "expression": "r.col_account_id",
                        "type": "string"
                    },
                    "ts": {
                        "expression": "r.col_ts",
                        "type": "datetime"
                    },
                    "txn_json": {
                        "expression": "strings.ReplaceAll(fmt.Sprintf(`{'ts': '%s', 'ticker': '%s', 'qty': '%d', 'price': '%f'}`, time.Format(r.col_ts, `2006-01-02 15:04:05`), r.col_ticker, r.col_qty, r.col_price), `'`,`\"`)",
                        "type": "string"
                    }
                }
            }
        }
    },
    "dependency_policies": {
        "current_active_first_stopped_nogo": {
            "is_default": true,
            "event_priority_order": "run_is_current(desc), node_start_ts(desc)",
            "rules": [
                {
                    "cmd": "go",
                    "expression": "e.run_is_current == true && e.run_final_status == wfmodel.RunStart && e.node_status == wfmodel.NodeBatchSuccess"
                },
                {
                    "cmd": "wait",
                    "expression": "e.run_is_current == true && e.run_final_status == wfmodel.RunStart && e.node_status == wfmodel.NodeBatchNone"
                },
                {
                    "cmd": "wait",
                    "expression": "e.run_is_current == true && e.run_final_status == wfmodel.RunStart && e.node_status == wfmodel.NodeBatchStart"
                },
                {
                    "cmd": "nogo",
                    "expression": "e.run_is_current == true && e.run_final_status == wfmodel.RunStart && e.node_status == wfmodel.NodeBatchFail"
                },
                {
                    "cmd": "go",
                    "expression": "e.run_is_current == false && e.run_final_status == wfmodel.RunStart && e.node_status == wfmodel.NodeBatchSuccess"
                },
                {
                    "cmd": "wait",
                    "expression": "e.run_is_current == false && e.run_final_status == wfmodel.RunStart && e.node_status == wfmodel.NodeBatchNone"
                },
                {
                    "cmd": "wait",
                    "expression": "e.run_is_current == false && e.run_final_status == wfmodel.RunStart && e.node_status == wfmodel.NodeBatchStart"
                },
                {
                    "cmd": "go",
                    "expression": "e.run_is_current == false && e.run_final_status == wfmodel.RunComplete && e.node_status == wfmodel.NodeBatchSuccess"
                },
                {
                    "cmd": "nogo",
                    "expression": "e.run_is_current == false && e.run_final_status == wfmodel.RunComplete && e.node_status == wfmodel.NodeBatchFail"
                }
            ]
        }
    }
}
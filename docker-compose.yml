version: '3'
networks:
  capinet:
    external: true

services:

  daemon:
    container_name: capillaries_daemon
    build:
      context: .
      dockerfile: ./pkg/exe/daemon/docker/Dockerfile
    volumes:
      - /capillaries_docker_test_cfg:/capillaries_docker_test_cfg:ro
      - /capillaries_docker_test_in:/capillaries_docker_test_in:ro
      - /capillaries_docker_test_out:/capillaries_docker_test_out
    environment:
      AMQP_URL: amqp://guest:guest@10.5.0.2/
      CASSANDRA_HOSTS: '["10.5.0.3"]'
    network_mode: bridge

  webapi:
    container_name: capillaries_webapi
    build:
      context: .
      dockerfile: ./pkg/exe/webapi/docker/Dockerfile
    environment:
      AMQP_URL: amqp://guest:guest@10.5.0.2/
      CASSANDRA_HOSTS: '["10.5.0.3"]'
      ACCESS_CONTROL_ACCESS_ORIGIN: '*'
    ports:
      - 6543:6543      
    network_mode: bridge
    networks:
      capinet:
        ipv4_address: 10.5.0.4
    
  ui:
    container_name: capillaries_ui
    build:
      context: .
      dockerfile: ./ui/docker/Dockerfile
    environment:
      CAPILLARIES_WEBAPI_URL: 'http://localhost:6543'
    ports:
      - 8080:8080      
    network_mode: bridge
    networks:
      capinet:
        ipv4_address: 10.5.0.5

# docker network create --driver=bridge --subnet=10.5.0.0/16 --ip-range=10.5.0.0/24 --gateway=10.5.0.1 capinet
# docker run -d --hostname my-rabbit -p 15672:15672 -p 5672:5672 --ip 10.5.0.2 rabbitmq:3-management
# docker run -d --hostname my-cassandra -p 9042:9042 --network=capinet --ip 10.5.0.3 cassandra

# docker compose -p "test_capillaries_containers" up -d
